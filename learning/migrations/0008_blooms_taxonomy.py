# Generated by Django 2.2.12 on 2020-08-06 13:39

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import learning.permissions


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('learning', '0007_global_model_update'),
    ]

    operations = [
        migrations.CreateModel(
            name='Objective',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ability', models.CharField(help_text='A label that indicates the abilities validated by the learner.', max_length=255, verbose_name='Ability')),
                ('language', models.CharField(choices=[('af', 'Afrikaans'), ('ar', 'Arabic'), ('ast', 'Asturian'), ('az', 'Azerbaijani'), ('bg', 'Bulgarian'), ('be', 'Belarusian'), ('bn', 'Bengali'), ('br', 'Breton'), ('bs', 'Bosnian'), ('ca', 'Catalan'), ('cs', 'Czech'), ('cy', 'Welsh'), ('da', 'Danish'), ('de', 'German'), ('dsb', 'Lower Sorbian'), ('el', 'Greek'), ('en', 'English'), ('en-au', 'Australian English'), ('en-gb', 'British English'), ('eo', 'Esperanto'), ('es', 'Spanish'), ('es-ar', 'Argentinian Spanish'), ('es-co', 'Colombian Spanish'), ('es-mx', 'Mexican Spanish'), ('es-ni', 'Nicaraguan Spanish'), ('es-ve', 'Venezuelan Spanish'), ('et', 'Estonian'), ('eu', 'Basque'), ('fa', 'Persian'), ('fi', 'Finnish'), ('fr', 'French'), ('fy', 'Frisian'), ('ga', 'Irish'), ('gd', 'Scottish Gaelic'), ('gl', 'Galician'), ('he', 'Hebrew'), ('hi', 'Hindi'), ('hr', 'Croatian'), ('hsb', 'Upper Sorbian'), ('hu', 'Hungarian'), ('hy', 'Armenian'), ('ia', 'Interlingua'), ('id', 'Indonesian'), ('io', 'Ido'), ('is', 'Icelandic'), ('it', 'Italian'), ('ja', 'Japanese'), ('ka', 'Georgian'), ('kab', 'Kabyle'), ('kk', 'Kazakh'), ('km', 'Khmer'), ('kn', 'Kannada'), ('ko', 'Korean'), ('lb', 'Luxembourgish'), ('lt', 'Lithuanian'), ('lv', 'Latvian'), ('mk', 'Macedonian'), ('ml', 'Malayalam'), ('mn', 'Mongolian'), ('mr', 'Marathi'), ('my', 'Burmese'), ('nb', 'Norwegian Bokmål'), ('ne', 'Nepali'), ('nl', 'Dutch'), ('nn', 'Norwegian Nynorsk'), ('os', 'Ossetic'), ('pa', 'Punjabi'), ('pl', 'Polish'), ('pt', 'Portuguese'), ('pt-br', 'Brazilian Portuguese'), ('ro', 'Romanian'), ('ru', 'Russian'), ('sk', 'Slovak'), ('sl', 'Slovenian'), ('sq', 'Albanian'), ('sr', 'Serbian'), ('sr-latn', 'Serbian Latin'), ('sv', 'Swedish'), ('sw', 'Swahili'), ('ta', 'Tamil'), ('te', 'Telugu'), ('th', 'Thai'), ('tr', 'Turkish'), ('tt', 'Tatar'), ('udm', 'Udmurt'), ('uk', 'Ukrainian'), ('ur', 'Urdu'), ('vi', 'Vietnamese'), ('zh-hans', 'Simplified Chinese'), ('zh-hant', 'Traditional Chinese')], help_text='The language in which the course_objective is written in.', max_length=20, verbose_name='Language')),
                ('slug', models.SlugField(unique=True)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Published the…')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Last updated the…')),
                ('author', models.ForeignKey(help_text='The course_objective’s author.', on_delete=django.db.models.deletion.CASCADE, related_name='created_objectives', to=settings.AUTH_USER_MODEL, verbose_name='Author')),
            ],
        ),
        migrations.CreateModel(
            name='ObjectiveValidatorMixin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(unique=True)),
                ('validated', models.DateTimeField(auto_now_add=True, verbose_name='Validated the…')),
            ],
        ),
        migrations.AlterField(
            model_name='activity',
            name='language',
            field=models.CharField(choices=[('af', 'Afrikaans'), ('ar', 'Arabic'), ('ast', 'Asturian'), ('az', 'Azerbaijani'), ('bg', 'Bulgarian'), ('be', 'Belarusian'), ('bn', 'Bengali'), ('br', 'Breton'), ('bs', 'Bosnian'), ('ca', 'Catalan'), ('cs', 'Czech'), ('cy', 'Welsh'), ('da', 'Danish'), ('de', 'German'), ('dsb', 'Lower Sorbian'), ('el', 'Greek'), ('en', 'English'), ('en-au', 'Australian English'), ('en-gb', 'British English'), ('eo', 'Esperanto'), ('es', 'Spanish'), ('es-ar', 'Argentinian Spanish'), ('es-co', 'Colombian Spanish'), ('es-mx', 'Mexican Spanish'), ('es-ni', 'Nicaraguan Spanish'), ('es-ve', 'Venezuelan Spanish'), ('et', 'Estonian'), ('eu', 'Basque'), ('fa', 'Persian'), ('fi', 'Finnish'), ('fr', 'French'), ('fy', 'Frisian'), ('ga', 'Irish'), ('gd', 'Scottish Gaelic'), ('gl', 'Galician'), ('he', 'Hebrew'), ('hi', 'Hindi'), ('hr', 'Croatian'), ('hsb', 'Upper Sorbian'), ('hu', 'Hungarian'), ('hy', 'Armenian'), ('ia', 'Interlingua'), ('id', 'Indonesian'), ('io', 'Ido'), ('is', 'Icelandic'), ('it', 'Italian'), ('ja', 'Japanese'), ('ka', 'Georgian'), ('kab', 'Kabyle'), ('kk', 'Kazakh'), ('km', 'Khmer'), ('kn', 'Kannada'), ('ko', 'Korean'), ('lb', 'Luxembourgish'), ('lt', 'Lithuanian'), ('lv', 'Latvian'), ('mk', 'Macedonian'), ('ml', 'Malayalam'), ('mn', 'Mongolian'), ('mr', 'Marathi'), ('my', 'Burmese'), ('nb', 'Norwegian Bokmål'), ('ne', 'Nepali'), ('nl', 'Dutch'), ('nn', 'Norwegian Nynorsk'), ('os', 'Ossetic'), ('pa', 'Punjabi'), ('pl', 'Polish'), ('pt', 'Portuguese'), ('pt-br', 'Brazilian Portuguese'), ('ro', 'Romanian'), ('ru', 'Russian'), ('sk', 'Slovak'), ('sl', 'Slovenian'), ('sq', 'Albanian'), ('sr', 'Serbian'), ('sr-latn', 'Serbian Latin'), ('sv', 'Swedish'), ('sw', 'Swahili'), ('ta', 'Tamil'), ('te', 'Telugu'), ('th', 'Thai'), ('tr', 'Turkish'), ('tt', 'Tatar'), ('udm', 'Udmurt'), ('uk', 'Ukrainian'), ('ur', 'Urdu'), ('vi', 'Vietnamese'), ('zh-hans', 'Simplified Chinese'), ('zh-hant', 'Traditional Chinese')], default='en', help_text='The language in which the entity is written in.', max_length=20, verbose_name='Language'),
        ),
        migrations.AlterField(
            model_name='activity',
            name='published',
            field=models.DateTimeField(auto_now_add=True, verbose_name='Published the…'),
        ),
        migrations.AlterField(
            model_name='activity',
            name='reuse',
            field=models.CharField(choices=[('NO_RESTRICTION', 'Reusable'), ('ONLY_AUTHOR', 'Author only'), ('NON_REUSABLE', 'Non reusable')], default='ONLY_AUTHOR', help_text='Whether you want the activity to be reusable in courses made by other users. Activities can be fully reusable, only by you or not reusable', max_length=20, verbose_name='Reuse'),
        ),
        migrations.AlterField(
            model_name='activity',
            name='updated',
            field=models.DateTimeField(auto_now=True, verbose_name='Last updated the…'),
        ),
        migrations.AlterField(
            model_name='course',
            name='language',
            field=models.CharField(choices=[('af', 'Afrikaans'), ('ar', 'Arabic'), ('ast', 'Asturian'), ('az', 'Azerbaijani'), ('bg', 'Bulgarian'), ('be', 'Belarusian'), ('bn', 'Bengali'), ('br', 'Breton'), ('bs', 'Bosnian'), ('ca', 'Catalan'), ('cs', 'Czech'), ('cy', 'Welsh'), ('da', 'Danish'), ('de', 'German'), ('dsb', 'Lower Sorbian'), ('el', 'Greek'), ('en', 'English'), ('en-au', 'Australian English'), ('en-gb', 'British English'), ('eo', 'Esperanto'), ('es', 'Spanish'), ('es-ar', 'Argentinian Spanish'), ('es-co', 'Colombian Spanish'), ('es-mx', 'Mexican Spanish'), ('es-ni', 'Nicaraguan Spanish'), ('es-ve', 'Venezuelan Spanish'), ('et', 'Estonian'), ('eu', 'Basque'), ('fa', 'Persian'), ('fi', 'Finnish'), ('fr', 'French'), ('fy', 'Frisian'), ('ga', 'Irish'), ('gd', 'Scottish Gaelic'), ('gl', 'Galician'), ('he', 'Hebrew'), ('hi', 'Hindi'), ('hr', 'Croatian'), ('hsb', 'Upper Sorbian'), ('hu', 'Hungarian'), ('hy', 'Armenian'), ('ia', 'Interlingua'), ('id', 'Indonesian'), ('io', 'Ido'), ('is', 'Icelandic'), ('it', 'Italian'), ('ja', 'Japanese'), ('ka', 'Georgian'), ('kab', 'Kabyle'), ('kk', 'Kazakh'), ('km', 'Khmer'), ('kn', 'Kannada'), ('ko', 'Korean'), ('lb', 'Luxembourgish'), ('lt', 'Lithuanian'), ('lv', 'Latvian'), ('mk', 'Macedonian'), ('ml', 'Malayalam'), ('mn', 'Mongolian'), ('mr', 'Marathi'), ('my', 'Burmese'), ('nb', 'Norwegian Bokmål'), ('ne', 'Nepali'), ('nl', 'Dutch'), ('nn', 'Norwegian Nynorsk'), ('os', 'Ossetic'), ('pa', 'Punjabi'), ('pl', 'Polish'), ('pt', 'Portuguese'), ('pt-br', 'Brazilian Portuguese'), ('ro', 'Romanian'), ('ru', 'Russian'), ('sk', 'Slovak'), ('sl', 'Slovenian'), ('sq', 'Albanian'), ('sr', 'Serbian'), ('sr-latn', 'Serbian Latin'), ('sv', 'Swedish'), ('sw', 'Swahili'), ('ta', 'Tamil'), ('te', 'Telugu'), ('th', 'Thai'), ('tr', 'Turkish'), ('tt', 'Tatar'), ('udm', 'Udmurt'), ('uk', 'Ukrainian'), ('ur', 'Urdu'), ('vi', 'Vietnamese'), ('zh-hans', 'Simplified Chinese'), ('zh-hant', 'Traditional Chinese')], default='en', help_text='The language in which the entity is written in.', max_length=20, verbose_name='Language'),
        ),
        migrations.AlterField(
            model_name='course',
            name='published',
            field=models.DateTimeField(auto_now_add=True, verbose_name='Published the…'),
        ),
        migrations.AlterField(
            model_name='course',
            name='updated',
            field=models.DateTimeField(auto_now=True, verbose_name='Last updated the…'),
        ),
        migrations.AlterField(
            model_name='resource',
            name='language',
            field=models.CharField(choices=[('af', 'Afrikaans'), ('ar', 'Arabic'), ('ast', 'Asturian'), ('az', 'Azerbaijani'), ('bg', 'Bulgarian'), ('be', 'Belarusian'), ('bn', 'Bengali'), ('br', 'Breton'), ('bs', 'Bosnian'), ('ca', 'Catalan'), ('cs', 'Czech'), ('cy', 'Welsh'), ('da', 'Danish'), ('de', 'German'), ('dsb', 'Lower Sorbian'), ('el', 'Greek'), ('en', 'English'), ('en-au', 'Australian English'), ('en-gb', 'British English'), ('eo', 'Esperanto'), ('es', 'Spanish'), ('es-ar', 'Argentinian Spanish'), ('es-co', 'Colombian Spanish'), ('es-mx', 'Mexican Spanish'), ('es-ni', 'Nicaraguan Spanish'), ('es-ve', 'Venezuelan Spanish'), ('et', 'Estonian'), ('eu', 'Basque'), ('fa', 'Persian'), ('fi', 'Finnish'), ('fr', 'French'), ('fy', 'Frisian'), ('ga', 'Irish'), ('gd', 'Scottish Gaelic'), ('gl', 'Galician'), ('he', 'Hebrew'), ('hi', 'Hindi'), ('hr', 'Croatian'), ('hsb', 'Upper Sorbian'), ('hu', 'Hungarian'), ('hy', 'Armenian'), ('ia', 'Interlingua'), ('id', 'Indonesian'), ('io', 'Ido'), ('is', 'Icelandic'), ('it', 'Italian'), ('ja', 'Japanese'), ('ka', 'Georgian'), ('kab', 'Kabyle'), ('kk', 'Kazakh'), ('km', 'Khmer'), ('kn', 'Kannada'), ('ko', 'Korean'), ('lb', 'Luxembourgish'), ('lt', 'Lithuanian'), ('lv', 'Latvian'), ('mk', 'Macedonian'), ('ml', 'Malayalam'), ('mn', 'Mongolian'), ('mr', 'Marathi'), ('my', 'Burmese'), ('nb', 'Norwegian Bokmål'), ('ne', 'Nepali'), ('nl', 'Dutch'), ('nn', 'Norwegian Nynorsk'), ('os', 'Ossetic'), ('pa', 'Punjabi'), ('pl', 'Polish'), ('pt', 'Portuguese'), ('pt-br', 'Brazilian Portuguese'), ('ro', 'Romanian'), ('ru', 'Russian'), ('sk', 'Slovak'), ('sl', 'Slovenian'), ('sq', 'Albanian'), ('sr', 'Serbian'), ('sr-latn', 'Serbian Latin'), ('sv', 'Swedish'), ('sw', 'Swahili'), ('ta', 'Tamil'), ('te', 'Telugu'), ('th', 'Thai'), ('tr', 'Turkish'), ('tt', 'Tatar'), ('udm', 'Udmurt'), ('uk', 'Ukrainian'), ('ur', 'Urdu'), ('vi', 'Vietnamese'), ('zh-hans', 'Simplified Chinese'), ('zh-hant', 'Traditional Chinese')], default='en', help_text='The language in which the entity is written in.', max_length=20, verbose_name='Language'),
        ),
        migrations.AlterField(
            model_name='resource',
            name='published',
            field=models.DateTimeField(auto_now_add=True, verbose_name='Published the…'),
        ),
        migrations.AlterField(
            model_name='resource',
            name='reuse',
            field=models.CharField(choices=[('NO_RESTRICTION', 'Reusable'), ('ONLY_AUTHOR', 'Author only'), ('NON_REUSABLE', 'Non reusable')], default='ONLY_AUTHOR', help_text='Whether you want the resource to be reusable in an activity created by other users. Resources can be fully reusable, only by you or not reusable', max_length=20, verbose_name='Reuse'),
        ),
        migrations.AlterField(
            model_name='resource',
            name='updated',
            field=models.DateTimeField(auto_now=True, verbose_name='Last updated the…'),
        ),
        migrations.CreateModel(
            name='ValidationOnObjective',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(unique=True)),
                ('validated_the', models.DateTimeField(auto_now_add=True, verbose_name='Validated the…')),
                ('objective', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='validations', to='learning.Objective', verbose_name='Objective')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='validations', to=settings.AUTH_USER_MODEL, verbose_name='Student')),
            ],
        ),
        migrations.CreateModel(
            name='ResourceObjective',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('taxonomy_level', models.CharField(choices=[('KNOWLEDGE', 'K'), ('COMPREHENSION', 'C'), ('APPLICATION', 'A'), ('ANALYSIS', 'A'), ('SYNTHESIS', 'S'), ('EVALUATION', 'E')], default='K', help_text='The taxonomy classification level.', max_length=20, verbose_name='Classification level')),
                ('needs_test', models.BooleanField(default=False, help_text='Whether this course_objective needs a test in order to be validated.', verbose_name='Objective needs test')),
                ('objective_reusable', models.BooleanField(default=True, help_text='If enable, the objective cannot be validated within another entity', verbose_name='Validation within another entity')),
                ('created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Since the')),
                ('objective', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resource_objectives', to='learning.Objective', verbose_name='Objective')),
                ('resource', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resource_objectives', to='learning.Resource', verbose_name='Resource')),
            ],
            options={
                'abstract': False,
            },
            bases=(learning.permissions.ObjectPermissionManagerMixin, models.Model),
        ),
        migrations.AddField(
            model_name='objective',
            name='validators',
            field=models.ManyToManyField(help_text='The user that can validate the course_objective.', related_name='validation_on_objective', through='learning.ValidationOnObjective', to=settings.AUTH_USER_MODEL, verbose_name='Students validators'),
        ),
        migrations.CreateModel(
            name='CourseObjective',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('taxonomy_level', models.CharField(choices=[('KNOWLEDGE', 'K'), ('COMPREHENSION', 'C'), ('APPLICATION', 'A'), ('ANALYSIS', 'A'), ('SYNTHESIS', 'S'), ('EVALUATION', 'E')], default='K', help_text='The taxonomy classification level.', max_length=20, verbose_name='Classification level')),
                ('needs_test', models.BooleanField(default=False, help_text='Whether this course_objective needs a test in order to be validated.', verbose_name='Objective needs test')),
                ('objective_reusable', models.BooleanField(default=True, help_text='If enable, the objective cannot be validated within another entity', verbose_name='Validation within another entity')),
                ('created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Since the')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_objectives', to='learning.Course', verbose_name='Course')),
                ('objective', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_objectives', to='learning.Objective', verbose_name='Objective')),
            ],
            options={
                'abstract': False,
            },
            bases=(learning.permissions.ObjectPermissionManagerMixin, models.Model),
        ),
        migrations.CreateModel(
            name='ActivityObjective',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('taxonomy_level', models.CharField(choices=[('KNOWLEDGE', 'K'), ('COMPREHENSION', 'C'), ('APPLICATION', 'A'), ('ANALYSIS', 'A'), ('SYNTHESIS', 'S'), ('EVALUATION', 'E')], default='K', help_text='The taxonomy classification level.', max_length=20, verbose_name='Classification level')),
                ('needs_test', models.BooleanField(default=False, help_text='Whether this course_objective needs a test in order to be validated.', verbose_name='Objective needs test')),
                ('objective_reusable', models.BooleanField(default=True, help_text='If enable, the objective cannot be validated within another entity', verbose_name='Validation within another entity')),
                ('created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Since the')),
                ('activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activity_objectives', to='learning.Activity', verbose_name='Activity')),
                ('objective', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activity_objectives', to='learning.Objective', verbose_name='Objective')),
            ],
            options={
                'abstract': False,
            },
            bases=(learning.permissions.ObjectPermissionManagerMixin, models.Model),
        ),
        migrations.AddField(
            model_name='activity',
            name='objectives',
            field=models.ManyToManyField(help_text='The objectives that are in the activity', related_name='objectives_on_activity', through='learning.ActivityObjective', to='learning.Objective', verbose_name='Objectives'),
        ),
        migrations.AddField(
            model_name='course',
            name='objectives',
            field=models.ManyToManyField(help_text='The objectives that are in this course', related_name='objectives_on_course', through='learning.CourseObjective', to='learning.Objective', verbose_name='Objectives'),
        ),
        migrations.AddField(
            model_name='resource',
            name='objectives',
            field=models.ManyToManyField(help_text='The objectives that are in the resource', related_name='objectives_on_resource', through='learning.ResourceObjective', to='learning.Objective', verbose_name='Objectives'),
        ),
        migrations.CreateModel(
            name='ResourceObjectiveValidator',
            fields=[
                ('objectivevalidatormixin_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='learning.ObjectiveValidatorMixin')),
                ('resource_objective', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resource_objective_validator', to='learning.ResourceObjective', verbose_name='Resource objective')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resource_objective_validator', to=settings.AUTH_USER_MODEL, verbose_name='Student')),
            ],
            bases=('learning.objectivevalidatormixin',),
        ),
        migrations.AddField(
            model_name='resourceobjective',
            name='validators',
            field=models.ManyToManyField(blank=True, help_text='Student who validated the course_objective', related_name='resource_objectives', through='learning.ResourceObjectiveValidator', to=settings.AUTH_USER_MODEL, verbose_name='Validators'),
        ),
        migrations.CreateModel(
            name='CourseObjectiveValidator',
            fields=[
                ('objectivevalidatormixin_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='learning.ObjectiveValidatorMixin')),
                ('course_objective', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_objective_validator', to='learning.CourseObjective', verbose_name='Course objective')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_objective_validator', to=settings.AUTH_USER_MODEL, verbose_name='Student')),
            ],
            bases=('learning.objectivevalidatormixin',),
        ),
        migrations.AddField(
            model_name='courseobjective',
            name='validators',
            field=models.ManyToManyField(blank=True, help_text='Student who validated the course_objective', related_name='course_objectives', through='learning.CourseObjectiveValidator', to=settings.AUTH_USER_MODEL, verbose_name='Validators'),
        ),
        migrations.CreateModel(
            name='ActivityObjectiveValidator',
            fields=[
                ('objectivevalidatormixin_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='learning.ObjectiveValidatorMixin')),
                ('activity_objective', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activity_objective_validator', to='learning.ActivityObjective', verbose_name='Activity objective')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activity_objective_validator', to=settings.AUTH_USER_MODEL, verbose_name='Student')),
            ],
            bases=('learning.objectivevalidatormixin',),
        ),
        migrations.AddField(
            model_name='activityobjective',
            name='validators',
            field=models.ManyToManyField(blank=True, help_text='Student who validated the course_objective', related_name='activity_objectives', through='learning.ActivityObjectiveValidator', to=settings.AUTH_USER_MODEL, verbose_name='Validators'),
        ),
    ]
